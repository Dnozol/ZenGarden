@import './colors';
// breakpoints

$S: 768px;
$M: 1024px;
$L: 1600px;

// media queries

@mixin MQ($canvas) {
  @if $canvas==S {
    @media only screen and (min-width: $S) {
      @content;
    }
  }

  @else if $canvas==M {
    @media only screen and (min-width: $M) {
      @content;
    }
  }

  @else if $canvas==L {
    @media only screen and (min-width: $L) {
      @content;
    }
  }
}

//header layout
#zen-intro header {
  background-color: $lightblue;
 // background-image: url ("comic.jpeg");
  //background-repeat: no-repreat;
  position: relative;
  height: 100vh;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

//header layout continued
.intro{
  margin: 0;
}

//Weird Content after Header: summary and preamble classes
.summary, .preamble{
  padding: 5vh;
  background-color: $white;
}

// super light grid - it works with the .cd-container class inside style.scss

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}

// main will be one grid container
.main {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-areas: "expl expl expl . . . . "
                       "expl expl expl part part part part "
                       ". . . part part part part "
                       ". reqs reqs reqs . . ."
                       ". reqs reqs reqs . bene bene"
                       ". reqs reqs reqs . . ."
                       "foot foot foot foot foot foot foot";

  border: 3px solid $gold;

  >div {
    border: 2px solid $red;
  }
}

.explanation {
  grid-area: expl;
  color: $white;
  background-color:$lightblue;
  > p {
    color:$white;
    border: 2px solid $gold;
    margin: 1em;
  }
  > h3 {
    margin: auto;
    text-align: center;
  }
}

.participation {
  grid-area: part;
  color: $white;
  background-color:$darkblue;
  > p {
    color:$white;
    border: 2px solid $gold;
    margin: 1em;
  }
  > h3 {
    margin: auto;
    text-align: center;
  }
}

.benefits {
  background-color:$lightblue;
  color:$white;

  > h3 {
    margin: auto;
    text-align: center;
  }

  grid-area: bene;
}

.requirements {
  grid-area: reqs;
  color: $white;
  background-color: $darkblue;

  >p {
    color: $white;
    border: 2px solid $gold;
    margin: 1em;
  }

  >h3 {
    margin: auto;
    text-align: center;
  }

}

//Sticky footer rulesets size increase of the footer
footer {
  grid-area: foot;
  background: $gold;
  display: flex;
  justify-content: space-evenly;
  align-items: flex-end;
  position: sticky;
  bottom: 0;
  width: 100%;
  padding: 1.5%;
}

//Colors
footer a{
  margin-top: auto;
  margin-bottom: auto;
  background-color: $darkblue;
  color: $white;
}
